{"ast":null,"code":"export var localDate = function localDate(utcTimestamp) {\n  var utcDate = new Date(utcTimestamp);\n  var options = {\n    weekday: 'short',\n    month: 'short',\n    day: 'numeric'\n  };\n  var localDate = new Intl.DateTimeFormat('en-US', options).format(utcDate);\n  console.log('Formatted Local Date:', localDate);\n  return localDate;\n};\nexport var convertToLocalTime = function convertToLocalTime(isoTimestamp) {\n  var localDate = isoTimestamp ? new Date(isoTimestamp) : new Date();\n  var localTime = localDate.toLocaleTimeString('en-US', {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  });\n  return localTime;\n};\nvar isoTimestamp = '2023-12-01T01:50:00.000Z';\nvar localTime = convertToLocalTime(isoTimestamp);\nconsole.log('Local Time:', localTime);","map":{"version":3,"names":["localDate","utcTimestamp","utcDate","Date","options","weekday","month","day","Intl","DateTimeFormat","format","console","log","convertToLocalTime","isoTimestamp","localTime","toLocaleTimeString","hour","minute","hour12"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/utils/formatFunctions.js"],"sourcesContent":["// Function to convert UTC timestamp to formatted local date\r\nexport const localDate = (utcTimestamp) => {\r\n  const utcDate = new Date(utcTimestamp);\r\n  const options = { weekday: 'short', month: 'short', day: 'numeric' };\r\n  const localDate = new Intl.DateTimeFormat('en-US', options).format(utcDate);\r\n  \r\n  console.log('Formatted Local Date:', localDate); // Log statement\r\n  \r\n  return localDate;\r\n};\r\n\r\n\r\n// Function to convert ISO 8601 timestamp to local time formatted as hh:mm\r\nexport const convertToLocalTime = (isoTimestamp) => {\r\n  const localDate = isoTimestamp\r\n    ? new Date(isoTimestamp)\r\n    : new Date(); // Use current date if no timestamp is provided\r\n\r\n  const localTime = localDate.toLocaleTimeString('en-US', {\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    hour12: true,\r\n  });\r\n\r\n  return localTime;\r\n};\r\n\r\n// Example usage\r\nconst isoTimestamp = '2023-12-01T01:50:00.000Z';\r\nconst localTime = convertToLocalTime(isoTimestamp);\r\nconsole.log('Local Time:', localTime);"],"mappings":"AACA,OAAO,IAAMA,SAAS,GAAG,SAAAA,UAACC,YAAY,EAAK;EACzC,IAAMC,OAAO,GAAG,IAAIC,IAAI,CAACF,YAAY,CAAC;EACtC,IAAMG,OAAO,GAAG;IAAEC,OAAO,EAAE,OAAO;IAAEC,KAAK,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAU,CAAC;EACpE,IAAMP,SAAS,GAAG,IAAIQ,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEL,OAAO,CAAC,CAACM,MAAM,CAACR,OAAO,CAAC;EAE3ES,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEZ,SAAS,CAAC;EAE/C,OAAOA,SAAS;AAClB,CAAC;AAID,OAAO,IAAMa,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,YAAY,EAAK;EAClD,IAAMd,SAAS,GAAGc,YAAY,GAC1B,IAAIX,IAAI,CAACW,YAAY,CAAC,GACtB,IAAIX,IAAI,CAAC,CAAC;EAEd,IAAMY,SAAS,GAAGf,SAAS,CAACgB,kBAAkB,CAAC,OAAO,EAAE;IACtDC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,OAAOJ,SAAS;AAClB,CAAC;AAGD,IAAMD,YAAY,GAAG,0BAA0B;AAC/C,IAAMC,SAAS,GAAGF,kBAAkB,CAACC,YAAY,CAAC;AAClDH,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEG,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}