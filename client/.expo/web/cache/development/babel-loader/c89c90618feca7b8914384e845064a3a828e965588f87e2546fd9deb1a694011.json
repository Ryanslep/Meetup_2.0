{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport EventCard from \"./EventCard\";\nimport NavButton from \"./NavButton\";\nimport { useAppContext } from \"./AppContext\";\nimport eventApi from \"../api/eventApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BrowseScreen = function BrowseScreen() {\n  var _useAppContext = useAppContext(),\n    user = _useAppContext.user,\n    setMyRsvps = _useAppContext.setMyRsvps,\n    setMyEvents = _useAppContext.setMyEvents,\n    browseEvents = _useAppContext.browseEvents,\n    setBrowseEvents = _useAppContext.setBrowseEvents;\n  useEffect(function () {\n    var fetchEvents = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var eventData = yield eventApi.getEvents();\n          setBrowseEvents(eventData);\n        } catch (error) {\n          console.error('Error fetching events:', error);\n        }\n      });\n      return function fetchEvents() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchEvents();\n  }, [setBrowseEvents]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Browse\"\n    }), _jsx(NavButton, {\n      title: \"Create Event\",\n      to: \"Create Event\"\n    }), _jsx(ScrollView, {\n      children: browseEvents ? browseEvents.map(function (event) {\n        return _jsx(EventCard, {\n          event: event,\n          userId: user._id,\n          setMyRsvps: setMyRsvps,\n          setMyEvents: setMyEvents,\n          setBrowseEvents: setBrowseEvents\n        }, event._id);\n      }) : _jsx(Text, {\n        children: \"Issue Retrieving Events from the database\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default BrowseScreen;","map":{"version":3,"names":["React","useEffect","View","Text","StyleSheet","ScrollView","EventCard","NavButton","useAppContext","eventApi","jsx","_jsx","jsxs","_jsxs","BrowseScreen","_useAppContext","user","setMyRsvps","setMyEvents","browseEvents","setBrowseEvents","fetchEvents","_ref","_asyncToGenerator","eventData","getEvents","error","console","apply","arguments","style","styles","container","children","title","to","map","event","userId","_id","create","flex","justifyContent","alignItems"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/BrowseScreen.js"],"sourcesContent":["// BrowseScreen.js\r\nimport React, { useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport EventCard from './EventCard';\r\nimport NavButton from './NavButton';\r\nimport { useAppContext } from './AppContext'; // Import the context hook\r\nimport eventApi from '../api/eventApi';\r\n\r\nconst BrowseScreen = () => {\r\n    const {\r\n        user,\r\n        setMyRsvps,\r\n        setMyEvents,\r\n        browseEvents,\r\n        setBrowseEvents,\r\n    } = useAppContext(); // Use the context hook\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            try {\r\n                const eventData = await eventApi.getEvents();\r\n                setBrowseEvents(eventData);\r\n            } catch (error) {\r\n                console.error('Error fetching events:', error);\r\n            }\r\n        };\r\n        fetchEvents();\r\n    }, [setBrowseEvents]);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text>Browse</Text>\r\n            <NavButton title=\"Create Event\" to=\"Create Event\" />\r\n            <ScrollView>\r\n                {browseEvents ? (\r\n                    browseEvents.map((event) => (\r\n                        <EventCard\r\n                            key={event._id}\r\n                            event={event}\r\n                            userId={user._id}\r\n                            setMyRsvps={setMyRsvps}\r\n                            setMyEvents={setMyEvents}\r\n                            setBrowseEvents={setBrowseEvents}\r\n                        />\r\n                    ))\r\n                ) : (\r\n                    <Text>Issue Retrieving Events from the database</Text>\r\n                )}\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nexport default BrowseScreen;\r\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAEzC,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAChB,SAASC,aAAa;AACtB,OAAOC,QAAQ;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACvB,IAAAC,cAAA,GAMIP,aAAa,CAAC,CAAC;IALfQ,IAAI,GAAAD,cAAA,CAAJC,IAAI;IACJC,UAAU,GAAAF,cAAA,CAAVE,UAAU;IACVC,WAAW,GAAAH,cAAA,CAAXG,WAAW;IACXC,YAAY,GAAAJ,cAAA,CAAZI,YAAY;IACZC,eAAe,GAAAL,cAAA,CAAfK,eAAe;EAGnBnB,SAAS,CAAC,YAAM;IACZ,IAAMoB,WAAW;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC5B,IAAI;UACA,IAAMC,SAAS,SAASf,QAAQ,CAACgB,SAAS,CAAC,CAAC;UAC5CL,eAAe,CAACI,SAAS,CAAC;QAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAClD;MACJ,CAAC;MAAA,gBAPKL,WAAWA,CAAA;QAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;MAAA;IAAA,GAOhB;IACDR,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACD,eAAe,CAAC,CAAC;EAErB,OACIP,KAAA,CAACX,IAAI;IAAC4B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BtB,IAAA,CAACR,IAAI;MAAA8B,QAAA,EAAC;IAAM,CAAM,CAAC,EACnBtB,IAAA,CAACJ,SAAS;MAAC2B,KAAK,EAAC,cAAc;MAACC,EAAE,EAAC;IAAc,CAAE,CAAC,EACpDxB,IAAA,CAACN,UAAU;MAAA4B,QAAA,EACNd,YAAY,GACTA,YAAY,CAACiB,GAAG,CAAC,UAACC,KAAK;QAAA,OACnB1B,IAAA,CAACL,SAAS;UAEN+B,KAAK,EAAEA,KAAM;UACbC,MAAM,EAAEtB,IAAI,CAACuB,GAAI;UACjBtB,UAAU,EAAEA,UAAW;UACvBC,WAAW,EAAEA,WAAY;UACzBE,eAAe,EAAEA;QAAgB,GAL5BiB,KAAK,CAACE,GAMd,CAAC;MAAA,CACL,CAAC,GAEF5B,IAAA,CAACR,IAAI;QAAA8B,QAAA,EAAC;MAAyC,CAAM;IACxD,CACO,CAAC;EAAA,CACX,CAAC;AAEf,CAAC;AAED,IAAMF,MAAM,GAAG3B,UAAU,CAACoC,MAAM,CAAC;EAC7BR,SAAS,EAAE;IACPS,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AAEF,eAAe7B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}