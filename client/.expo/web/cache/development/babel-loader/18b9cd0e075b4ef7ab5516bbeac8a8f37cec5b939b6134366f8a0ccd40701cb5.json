{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ProfileBanner from \"./ProfileBanner\";\nimport userApi from \"../api/userApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen(_ref) {\n  var route = _ref.route;\n  var user = route.params.user;\n  console.log('\\n\\n\\n\\n', user.events, '\\n\\n\\n\\n');\n  console.log('\\n\\n\\n\\n', user.rsvps, '\\n\\n\\n\\n');\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    events = _useState2[0],\n    setEvents = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    rsvps = _useState4[0],\n    setRsvps = _useState4[1];\n  useEffect(function () {\n    var fetchEventsData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var eventsData = yield userApi.getMyEvents(user._id);\n        console.log(eventsData);\n        var rsvpData = yield userApi.getMyRsvps(user._id);\n        console.log(rsvpData);\n      });\n      return function fetchEventsData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ProfileBanner, {\n      user: user\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Hosting\"\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Attending\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 10\n  },\n  label: {\n    alignSelf: 'flex-start',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: 'black'\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","ProfileBanner","userApi","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_ref","route","user","params","console","log","events","rsvps","_useState","_useState2","_slicedToArray","setEvents","_useState3","_useState4","setRsvps","fetchEventsData","_ref2","_asyncToGenerator","eventsData","getMyEvents","_id","rsvpData","getMyRsvps","apply","arguments","style","styles","container","children","label","create","flex","alignItems","paddingLeft","paddingRight","paddingBottom","alignSelf","fontSize","fontWeight","marginBottom","color"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/ProfileScreen.js"],"sourcesContent":["// ProfileScreen.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport ProfileBanner from './ProfileBanner'; // Adjust the path based on your project structure\r\nimport userApi from '../api/userApi';\r\n\r\nconst ProfileScreen = ({ route }) => {\r\n  const { user } = route.params;\r\n  console.log('\\n\\n\\n\\n', user.events, '\\n\\n\\n\\n')\r\n  console.log('\\n\\n\\n\\n', user.rsvps  , '\\n\\n\\n\\n')\r\n  const [events, setEvents] = useState(null);\r\n  const [rsvps, setRsvps] = useState(null);\r\n\r\n  useEffect(() => {\r\n    /// set user events\r\n    const fetchEventsData = async () => {\r\n      const eventsData = await userApi.getMyEvents(user._id);\r\n      console.log(eventsData)\r\n      const rsvpData = await userApi.getMyRsvps(user._id);\r\n      console.log(rsvpData)\r\n      \r\n    } \r\n    // set user rsvps\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ProfileBanner user={user} />\r\n      <Text style={styles.label}>Hosting</Text>\r\n      <Text style={styles.label}>Attending</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  label: {\r\n    alignSelf: 'flex-start',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    color: 'black',\r\n  },\r\n});\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAEnD,OAAOC,aAAa;AACpB,OAAOC,OAAO;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErC,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAC5B,IAAQC,IAAI,GAAKD,KAAK,CAACE,MAAM,CAArBD,IAAI;EACZE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,IAAI,CAACI,MAAM,EAAE,UAAU,CAAC;EAChDF,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,IAAI,CAACK,KAAK,EAAI,UAAU,CAAC;EACjD,IAAAC,SAAA,GAA4BnB,QAAQ,CAAC,IAAI,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCF,MAAM,GAAAG,UAAA;IAAEE,SAAS,GAAAF,UAAA;EACxB,IAAAG,UAAA,GAA0BvB,QAAQ,CAAC,IAAI,CAAC;IAAAwB,UAAA,GAAAH,cAAA,CAAAE,UAAA;IAAjCL,KAAK,GAAAM,UAAA;IAAEC,QAAQ,GAAAD,UAAA;EAEtBzB,SAAS,CAAC,YAAM;IAEd,IAAM2B,eAAe;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAClC,IAAMC,UAAU,SAASxB,OAAO,CAACyB,WAAW,CAACjB,IAAI,CAACkB,GAAG,CAAC;QACtDhB,OAAO,CAACC,GAAG,CAACa,UAAU,CAAC;QACvB,IAAMG,QAAQ,SAAS3B,OAAO,CAAC4B,UAAU,CAACpB,IAAI,CAACkB,GAAG,CAAC;QACnDhB,OAAO,CAACC,GAAG,CAACgB,QAAQ,CAAC;MAEvB,CAAC;MAAA,gBANKN,eAAeA,CAAA;QAAA,OAAAC,KAAA,CAAAO,KAAA,OAAAC,SAAA;MAAA;IAAA,GAMpB;EAEH,CAAC,CAAC;EAEF,OACE1B,KAAA,CAACR,IAAI;IAACmC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BhC,IAAA,CAACH,aAAa;MAACS,IAAI,EAAEA;IAAK,CAAE,CAAC,EAC7BN,IAAA,CAACL,IAAI;MAACkC,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAO,CAAM,CAAC,EACzChC,IAAA,CAACL,IAAI;MAACkC,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAS,CAAM,CAAC;EAAA,CACvC,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGlC,UAAU,CAACsC,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE;EACjB,CAAC;EACDN,KAAK,EAAE;IACLO,SAAS,EAAE,YAAY;IACvBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAezC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}