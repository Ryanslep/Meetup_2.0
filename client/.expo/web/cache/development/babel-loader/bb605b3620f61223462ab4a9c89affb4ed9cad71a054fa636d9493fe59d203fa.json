{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlexInput from \"./FlexInput\";\nimport SubmitButton from \"./SubmitButton\";\nimport userApi from \"../api/userApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginForm = function LoginForm() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      console.log('Username:', username);\n      console.log('Password:', password);\n      var sendLogin = yield userApi.login(username, password);\n      var response = yield sendLogin;\n      console.log(response);\n    });\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlexInput, {\n      type: \"text\",\n      placeholder: \"Username or Email\",\n      value: username,\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      }\n    }), _jsx(FlexInput, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(SubmitButton, {\n      onPress: handleLogin,\n      title: \"Login\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    width: 400\n  }\n});\nexport default LoginForm;","map":{"version":3,"names":["React","useState","View","StyleSheet","FlexInput","SubmitButton","userApi","jsx","_jsx","jsxs","_jsxs","LoginForm","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","_ref","_asyncToGenerator","console","log","sendLogin","login","response","apply","arguments","style","styles","container","children","type","placeholder","value","onChangeText","text","onPress","title","create","padding","width"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport FlexInput from './FlexInput';\r\nimport SubmitButton from './SubmitButton';\r\n\r\nimport userApi from '../api/userApi';\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    console.log('Username:', username);\r\n    console.log('Password:', password);\r\n\r\n    const sendLogin = await userApi.login(username, password);\r\n    const response = await sendLogin;\r\n    console.log(response);\r\n\r\n    // You can add logic to show a toast message here based on the response\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlexInput\r\n        type=\"text\"\r\n        placeholder=\"Username or Email\"\r\n        value={username}\r\n        onChangeText={(text) => setUsername(text)}\r\n      />\r\n      <FlexInput\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)}\r\n      />\r\n      <SubmitButton\r\n        onPress={handleLogin}\r\n        title=\"Login\"\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n    width: 400,\r\n  },\r\n});\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAExC,OAAOC,SAAS;AAChB,OAAOC,YAAY;AAEnB,OAAOC,OAAO;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErC,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACtB,IAAAC,SAAA,GAAgCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAgChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEV,QAAQ,CAAC;MAClCS,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEN,QAAQ,CAAC;MAElC,IAAMO,SAAS,SAASpB,OAAO,CAACqB,KAAK,CAACZ,QAAQ,EAAEI,QAAQ,CAAC;MACzD,IAAMS,QAAQ,SAASF,SAAS;MAChCF,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;IAGvB,CAAC;IAAA,gBATKP,WAAWA,CAAA;MAAA,OAAAC,IAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;EAAA,GAShB;EAED,OACEpB,KAAA,CAACR,IAAI;IAAC6B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B1B,IAAA,CAACJ,SAAS;MACR+B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAEtB,QAAS;MAChBuB,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKvB,WAAW,CAACuB,IAAI,CAAC;MAAA;IAAC,CAC3C,CAAC,EACF/B,IAAA,CAACJ,SAAS;MACR+B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAElB,QAAS;MAChBmB,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKnB,WAAW,CAACmB,IAAI,CAAC;MAAA;IAAC,CAC3C,CAAC,EACF/B,IAAA,CAACH,YAAY;MACXmC,OAAO,EAAEnB,WAAY;MACrBoB,KAAK,EAAC;IAAO,CACd,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,IAAMT,MAAM,GAAG7B,UAAU,CAACuC,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAejC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}