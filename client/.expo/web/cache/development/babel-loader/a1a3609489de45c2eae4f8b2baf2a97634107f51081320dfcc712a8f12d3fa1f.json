{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport messageApi from \"../api/messageApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SendMessageScreen = function SendMessageScreen(_ref) {\n  var route = _ref.route;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    setText = _useState2[1];\n  var _route$params = route.params,\n    sender = _route$params.sender,\n    receiver = _route$params.receiver;\n  var sendMessage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield messageApi.sendMessage({\n          sender: sender,\n          receiver: receiver,\n          text: text\n        });\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    });\n    return function sendMessage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      value: text,\n      onChangeText: function onChangeText(newText) {\n        return setText(newText);\n      },\n      placeholder: \"Type your message\"\n    }), _jsx(Button, {\n      title: \"Send\",\n      onPress: sendMessage\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 16\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 16,\n    paddingHorizontal: 8\n  }\n});\nexport default SendMessageScreen;","map":{"version":3,"names":["React","useState","View","TextInput","Button","StyleSheet","messageApi","jsx","_jsx","jsxs","_jsxs","SendMessageScreen","_ref","route","_useState","_useState2","_slicedToArray","text","setText","_route$params","params","sender","receiver","sendMessage","_ref2","_asyncToGenerator","error","console","apply","arguments","style","styles","container","children","input","value","onChangeText","newText","placeholder","title","onPress","create","flex","justifyContent","padding","height","borderColor","borderWidth","marginBottom","paddingHorizontal"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/SendMessageScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button, StyleSheet } from 'react-native';\r\nimport messageApi from '../api/messageApi';  // Import your message API functions\r\n\r\nconst SendMessageScreen = ({ route }) => {\r\n  const [text, setText] = useState('');\r\n  const { sender, receiver } = route.params;\r\n\r\n  const sendMessage = async () => {\r\n    try {\r\n      // Call the sendMessage API function\r\n      await messageApi.sendMessage({ sender, receiver, text });\r\n      // Optionally, you can navigate back to the chat screen or perform other actions\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      // Handle the error, e.g., display an error message to the user\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        value={text}\r\n        onChangeText={(newText) => setText(newText)}\r\n        placeholder=\"Type your message\"\r\n      />\r\n      <Button title=\"Send\" onPress={sendMessage} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 16,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 16,\r\n    paddingHorizontal: 8,\r\n  },\r\n});\r\n\r\nexport default SendMessageScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAExC,OAAOC,UAAU;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE3C,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAChC,IAAAC,SAAA,GAAwBb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAAI,aAAA,GAA6BN,KAAK,CAACO,MAAM;IAAjCC,MAAM,GAAAF,aAAA,CAANE,MAAM;IAAEC,QAAQ,GAAAH,aAAA,CAARG,QAAQ;EAExB,IAAMC,WAAW;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAI;QAEF,MAAMnB,UAAU,CAACiB,WAAW,CAAC;UAAEF,MAAM,EAANA,MAAM;UAAEC,QAAQ,EAARA,QAAQ;UAAEL,IAAI,EAAJA;QAAK,CAAC,CAAC;MAE1D,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAEhD;IACF,CAAC;IAAA,gBATKH,WAAWA,CAAA;MAAA,OAAAC,KAAA,CAAAI,KAAA,OAAAC,SAAA;IAAA;EAAA,GAShB;EAED,OACEnB,KAAA,CAACR,IAAI;IAAC4B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BzB,IAAA,CAACL,SAAS;MACR2B,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,KAAK,EAAElB,IAAK;MACZmB,YAAY,EAAE,SAAAA,aAACC,OAAO;QAAA,OAAKnB,OAAO,CAACmB,OAAO,CAAC;MAAA,CAAC;MAC5CC,WAAW,EAAC;IAAmB,CAChC,CAAC,EACF9B,IAAA,CAACJ,MAAM;MAACmC,KAAK,EAAC,MAAM;MAACC,OAAO,EAAEjB;IAAY,CAAE,CAAC;EAAA,CACzC,CAAC;AAEX,CAAC;AAED,IAAMQ,MAAM,GAAG1B,UAAU,CAACoC,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE;EACX,CAAC;EACDV,KAAK,EAAE;IACLW,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,EAAE;IAChBC,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAEF,eAAetC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}