{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { RootSiblingParent } from 'react-native-root-siblings';\nimport RegisterScreen from \"./components/RegisterScreen\";\nimport LoginScreen from \"./components/LoginScreen\";\nimport ProfileScreen from \"./components/ProfileScreen\";\nimport Navbar from \"./components/Navbar\";\nimport BrowseScreen from \"./components/BrowseScreen\";\nimport EventFormScreen from \"./components/EventFormScreen\";\nimport EventDetails from \"./components/EventDetails\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    loggedIn = _useState2[0],\n    setLoggedIn = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n  return _jsx(RootSiblingParent, {\n    style: styles.container,\n    children: _jsxs(NavigationContainer, {\n      children: [_jsxs(Stack.Navigator, {\n        initialRouteName: \"Login\",\n        children: [_jsx(Stack.Screen, {\n          name: \"Profile\",\n          children: function children(props) {\n            return _jsx(ProfileScreen, _objectSpread(_objectSpread({}, props), {}, {\n              setLoggedIn: setLoggedIn\n            }));\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Browse\",\n          children: function children(props) {\n            return _jsx(BrowseScreen, _objectSpread(_objectSpread({}, props), {}, {\n              userId: user._id\n            }));\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Create Event\",\n          children: function children(props) {\n            return _jsx(EventFormScreen, _objectSpread(_objectSpread({}, props), {}, {\n              hostId: user._id\n            }));\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Login\",\n          children: function children(props) {\n            return _jsx(LoginScreen, _objectSpread(_objectSpread({}, props), {}, {\n              setLoggedIn: setLoggedIn,\n              setUser: setUser\n            }));\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          children: function children(props) {\n            return _jsx(RegisterScreen, _objectSpread(_objectSpread({}, props), {}, {\n              setLoggedIn: setLoggedIn\n            }));\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Event Details\",\n          component: EventDetails\n        })]\n      }), _jsx(Stack.Screen, {\n        name: \"Preferences\",\n        children: function children(props) {\n          return _jsx(Preferences, _objectSpread(_objectSpread({}, props), {}, {\n            updateUser: updateUser,\n            userInfo: userInfo\n          }));\n        }\n      }), _jsx(Navbar, {\n        isLoggedIn: loggedIn,\n        user: user\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%'\n  }\n});","map":{"version":3,"names":["React","useState","StatusBar","StyleSheet","RootSiblingParent","RegisterScreen","LoginScreen","ProfileScreen","Navbar","BrowseScreen","EventFormScreen","EventDetails","NavigationContainer","createStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","loggedIn","setLoggedIn","_useState3","_useState4","user","setUser","style","styles","container","children","Navigator","initialRouteName","Screen","name","props","_objectSpread","userId","_id","hostId","component","Preferences","updateUser","userInfo","isLoggedIn","create","flex","backgroundColor","alignItems","justifyContent","height"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet } from 'react-native';\r\nimport { RootSiblingParent } from 'react-native-root-siblings';\r\n\r\nimport RegisterScreen from './components/RegisterScreen';\r\nimport LoginScreen from './components/LoginScreen';\r\nimport ProfileScreen from './components/ProfileScreen';\r\nimport Navbar from './components/Navbar';\r\nimport BrowseScreen from './components/BrowseScreen';\r\nimport EventFormScreen from './components/EventFormScreen';\r\nimport EventDetails from './components/EventDetails';\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App() {\r\n  const [loggedIn, setLoggedIn] = useState(null)\r\n  const [user, setUser] = useState(null);\r\n  return (\r\n    <RootSiblingParent style={styles.container}>\r\n      <NavigationContainer>\r\n        <Stack.Navigator initialRouteName=\"Login\">\r\n          <Stack.Screen name=\"Profile\">\r\n            {(props) => <ProfileScreen {...props} setLoggedIn={setLoggedIn}/>}\r\n          </Stack.Screen>\r\n          <Stack.Screen name=\"Browse\">\r\n            {(props) => <BrowseScreen {...props} userId={user._id}/>}\r\n          </Stack.Screen>\r\n          <Stack.Screen name=\"Create Event\">\r\n            {(props) => <EventFormScreen {...props} hostId={user._id}/>}\r\n          </Stack.Screen>\r\n          <Stack.Screen name=\"Login\">\r\n            {(props) => <LoginScreen {...props} setLoggedIn={setLoggedIn} setUser={setUser}/>}\r\n          </Stack.Screen>\r\n          <Stack.Screen name=\"Register\">\r\n            {(props) => <RegisterScreen {...props} setLoggedIn={setLoggedIn} />}\r\n          </Stack.Screen> \r\n          <Stack.Screen name=\"Event Details\" component={EventDetails} />        \r\n        </Stack.Navigator>\r\n        <Stack.Screen name=\"Preferences\">\r\n            {(props) => <Preferences {...props} updateUser={updateUser} userInfo={userInfo} />}\r\n          </Stack.Screen>\r\n        <Navbar isLoggedIn={loggedIn} user={user} />\r\n        <StatusBar style=\"auto\" />\r\n      </NavigationContainer>\r\n    </RootSiblingParent>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%'\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}