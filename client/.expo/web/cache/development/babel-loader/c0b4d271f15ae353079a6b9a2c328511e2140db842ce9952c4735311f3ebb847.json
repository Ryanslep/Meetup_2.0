{"ast":null,"code":"export var localDate = function localDate(utcTimestamp) {\n  var utcDate = new Date(utcTimestamp);\n  var options = {\n    weekday: 'short',\n    month: 'short',\n    day: 'numeric'\n  };\n  var localDate = new Intl.DateTimeFormat('en-US', options).format(utcDate);\n  console.log('Formatted Local Date:', localDate);\n  return localDate;\n};\nexport var localTime = function localTime(localDate) {\n  if (!localDate) {\n    return null;\n  }\n  var hours = localDate.getHours();\n  var minutes = localDate.getMinutes();\n  var formattedHours = String(hours).padStart(2, '0');\n  var formattedMinutes = String(minutes).padStart(2, '0');\n  var formattedTime = `${formattedHours}:${formattedMinutes}`;\n  return formattedTime;\n};","map":{"version":3,"names":["localDate","utcTimestamp","utcDate","Date","options","weekday","month","day","Intl","DateTimeFormat","format","console","log","localTime","hours","getHours","minutes","getMinutes","formattedHours","String","padStart","formattedMinutes","formattedTime"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/utils/formatFunctions.js"],"sourcesContent":["// Function to convert UTC timestamp to formatted local date\r\nexport const localDate = (utcTimestamp) => {\r\n  const utcDate = new Date(utcTimestamp);\r\n  const options = { weekday: 'short', month: 'short', day: 'numeric' };\r\n  const localDate = new Intl.DateTimeFormat('en-US', options).format(utcDate);\r\n  \r\n  console.log('Formatted Local Date:', localDate); // Log statement\r\n  \r\n  return localDate;\r\n};\r\n\r\n\r\n// Function to format local time as hh:mm\r\nexport const localTime = (localDate) => {\r\n  if (!localDate) {\r\n    return null;\r\n  }\r\n\r\n  const hours = localDate.getHours();\r\n  const minutes = localDate.getMinutes();\r\n\r\n  // Format hours and minutes with leading zeros\r\n  const formattedHours = String(hours).padStart(2, '0');\r\n  const formattedMinutes = String(minutes).padStart(2, '0');\r\n\r\n  // Combine hours and minutes in 'hh:mm' format\r\n  const formattedTime = `${formattedHours}:${formattedMinutes}`;\r\n\r\n  return formattedTime;\r\n};\r\n"],"mappings":"AACA,OAAO,IAAMA,SAAS,GAAG,SAAAA,UAACC,YAAY,EAAK;EACzC,IAAMC,OAAO,GAAG,IAAIC,IAAI,CAACF,YAAY,CAAC;EACtC,IAAMG,OAAO,GAAG;IAAEC,OAAO,EAAE,OAAO;IAAEC,KAAK,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAU,CAAC;EACpE,IAAMP,SAAS,GAAG,IAAIQ,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEL,OAAO,CAAC,CAACM,MAAM,CAACR,OAAO,CAAC;EAE3ES,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEZ,SAAS,CAAC;EAE/C,OAAOA,SAAS;AAClB,CAAC;AAID,OAAO,IAAMa,SAAS,GAAG,SAAZA,SAASA,CAAIb,SAAS,EAAK;EACtC,IAAI,CAACA,SAAS,EAAE;IACd,OAAO,IAAI;EACb;EAEA,IAAMc,KAAK,GAAGd,SAAS,CAACe,QAAQ,CAAC,CAAC;EAClC,IAAMC,OAAO,GAAGhB,SAAS,CAACiB,UAAU,CAAC,CAAC;EAGtC,IAAMC,cAAc,GAAGC,MAAM,CAACL,KAAK,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACrD,IAAMC,gBAAgB,GAAGF,MAAM,CAACH,OAAO,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAGzD,IAAME,aAAa,GAAI,GAAEJ,cAAe,IAAGG,gBAAiB,EAAC;EAE7D,OAAOC,aAAa;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}