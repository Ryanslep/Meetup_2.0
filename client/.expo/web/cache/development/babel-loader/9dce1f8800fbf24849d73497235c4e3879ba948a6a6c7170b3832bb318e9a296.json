{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport FlexInput from \"./FlexInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DatePicker = function DatePicker(_ref) {\n  var label = _ref.label,\n    date = _ref.date,\n    onChange = _ref.onChange;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    show = _useState2[0],\n    setShow = _useState2[1];\n  var showPicker = function showPicker() {\n    setShow(true);\n  };\n  var hidePicker = function hidePicker() {\n    setShow(false);\n  };\n  var onPickerChange = function onPickerChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    onChange(currentDate);\n  };\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: showPicker,\n      children: _jsx(View, {\n        children: _jsx(Text, {\n          children: label\n        })\n      })\n    }), _jsx(Modal, {\n      visible: show,\n      transparent: true,\n      animationType: \"slide\",\n      children: _jsxs(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'flex-end'\n        },\n        children: [_jsx(DateTimePicker, {\n          testID: \"dateTimePicker\",\n          value: date,\n          mode: \"date\",\n          is24Hour: true,\n          display: \"default\",\n          onChange: onPickerChange\n        }), _jsx(TouchableOpacity, {\n          onPress: hidePicker,\n          children: _jsx(Text, {\n            children: \"Done\"\n          })\n        })]\n      })\n    })]\n  });\n};\nexport default DatePicker;","map":{"version":3,"names":["React","useState","View","Text","Modal","TouchableOpacity","Platform","DateTimePicker","FlexInput","jsx","_jsx","jsxs","_jsxs","DatePicker","_ref","label","date","onChange","_useState","_useState2","_slicedToArray","show","setShow","showPicker","hidePicker","onPickerChange","event","selectedDate","currentDate","children","onPress","visible","transparent","animationType","style","flex","justifyContent","testID","value","mode","is24Hour","display"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/DatePicker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Modal, TouchableOpacity, Platform } from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport FlexInput from './FlexInput';\r\n\r\nconst DatePicker = ({ label, date, onChange }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const showPicker = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const hidePicker = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const onPickerChange = (event, selectedDate) => {\r\n    const currentDate = selectedDate || date;\r\n    onChange(currentDate);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={showPicker}>\r\n        <View>\r\n          <Text>{label}</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n\r\n      <Modal visible={show} transparent={true} animationType=\"slide\">\r\n        <View style={{ flex: 1, justifyContent: 'flex-end' }}>\r\n          <DateTimePicker\r\n            testID=\"dateTimePicker\"\r\n            value={date}\r\n            mode=\"date\"\r\n            is24Hour={true}\r\n            display=\"default\"\r\n            onChange={onPickerChange}\r\n          />\r\n          <TouchableOpacity onPress={hidePicker}>\r\n            <Text>Done</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default DatePicker;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAExC,OAAOC,cAAc,MAAM,wCAAwC;AACnE,OAAOC,SAAS;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAkC;EAAA,IAA5BC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAAEC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;EACzC,IAAAC,SAAA,GAAwBjB,QAAQ,CAAC,KAAK,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhCG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBD,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,IAAME,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBF,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EAED,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,KAAK,EAAEC,YAAY,EAAK;IAC9C,IAAMC,WAAW,GAAGD,YAAY,IAAIX,IAAI;IACxCC,QAAQ,CAACW,WAAW,CAAC;EACvB,CAAC;EAED,OACEhB,KAAA,CAACV,IAAI;IAAA2B,QAAA,GACHnB,IAAA,CAACL,gBAAgB;MAACyB,OAAO,EAAEP,UAAW;MAAAM,QAAA,EACpCnB,IAAA,CAACR,IAAI;QAAA2B,QAAA,EACHnB,IAAA,CAACP,IAAI;UAAA0B,QAAA,EAAEd;QAAK,CAAO;MAAC,CAChB;IAAC,CACS,CAAC,EAEnBL,IAAA,CAACN,KAAK;MAAC2B,OAAO,EAAEV,IAAK;MAACW,WAAW,EAAE,IAAK;MAACC,aAAa,EAAC,OAAO;MAAAJ,QAAA,EAC5DjB,KAAA,CAACV,IAAI;QAACgC,KAAK,EAAE;UAAEC,IAAI,EAAE,CAAC;UAAEC,cAAc,EAAE;QAAW,CAAE;QAAAP,QAAA,GACnDnB,IAAA,CAACH,cAAc;UACb8B,MAAM,EAAC,gBAAgB;UACvBC,KAAK,EAAEtB,IAAK;UACZuB,IAAI,EAAC,MAAM;UACXC,QAAQ,EAAE,IAAK;UACfC,OAAO,EAAC,SAAS;UACjBxB,QAAQ,EAAEQ;QAAe,CAC1B,CAAC,EACFf,IAAA,CAACL,gBAAgB;UAACyB,OAAO,EAAEN,UAAW;UAAAK,QAAA,EACpCnB,IAAA,CAACP,IAAI;YAAA0B,QAAA,EAAC;UAAI,CAAM;QAAC,CACD,CAAC;MAAA,CACf;IAAC,CACF,CAAC;EAAA,CACJ,CAAC;AAEX,CAAC;AAED,eAAehB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}