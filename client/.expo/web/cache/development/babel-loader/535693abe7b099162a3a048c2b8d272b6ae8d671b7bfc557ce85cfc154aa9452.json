{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useCallback, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { GiftedChat, InputToolbar, Composer, Send, Bubble } from 'react-native-gifted-chat';\nimport messageApi from \"../api/messageApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SendMessageScreen = function SendMessageScreen(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    senderId = _route$params.senderId,\n    receiverId = _route$params.receiverId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  useEffect(function () {\n    var loadMessageHistory = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var history = yield messageApi.getThread(senderId, receiverId);\n          var formattedHistory = history.map(function (msg) {\n            return {\n              _id: msg._id,\n              text: msg.text,\n              createdAt: new Date(msg.createdAt),\n              user: {\n                _id: msg.sender,\n                name: msg.sender.username\n              },\n              position: msg.sender === senderId ? 'right' : 'left'\n            };\n          });\n          setMessages(formattedHistory.reverse());\n        } catch (error) {\n          console.error('Error loading message history:', error);\n        }\n      });\n      return function loadMessageHistory() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadMessageHistory();\n  }, [senderId, receiverId]);\n  var onSend = useCallback(_asyncToGenerator(function* () {\n    var newMessages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var message = newMessages[0];\n    try {\n      yield messageApi.sendMessage({\n        sender: senderId,\n        receiver: receiverId,\n        text: message.text\n      });\n      setMessages(function (previousMessages) {\n        return GiftedChat.append(previousMessages, newMessages);\n      });\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  }), [senderId, receiverId]);\n  var renderSend = function renderSend(props) {\n    return _jsx(Send, _objectSpread(_objectSpread({}, props), {}, {\n      children: _jsx(View, {\n        style: {\n          marginRight: 10,\n          marginBottom: 5\n        }\n      })\n    }));\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(GiftedChat, {\n      messages: messages,\n      onSend: onSend,\n      user: {\n        _id: senderId\n      },\n      renderInputToolbar: function renderInputToolbar(props) {\n        return _jsx(InputToolbar, _objectSpread(_objectSpread({}, props), {}, {\n          containerStyle: {\n            backgroundColor: 'white'\n          }\n        }));\n      },\n      renderComposer: function renderComposer(props) {\n        return _jsx(Composer, _objectSpread(_objectSpread({}, props), {}, {\n          textInputStyle: {\n            color: 'black',\n            backgroundColor: 'lightgray'\n          },\n          placeholder: \"Type a message...\"\n        }));\n      },\n      renderSend: renderSend,\n      renderBubble: function renderBubble(props) {\n        return _jsx(Bubble, _objectSpread(_objectSpread({}, props), {}, {\n          wrapperStyle: {\n            right: {\n              backgroundColor: '#007AFF'\n            },\n            left: {\n              backgroundColor: '#ededed'\n            }\n          }\n        }));\n      },\n      parsePatterns: function parsePatterns(linkStyle) {\n        return [{\n          pattern: /#(\\w+)/,\n          style: {\n            color: 'orange',\n            textDecorationLine: 'underline'\n          },\n          onPress: function onPress(props) {\n            return alert(`Pressed on hashtag: ${props.text}`);\n          }\n        }];\n      },\n      timeFormat: \"LT\"\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport default SendMessageScreen;","map":{"version":3,"names":["React","useState","useCallback","useEffect","View","StyleSheet","GiftedChat","InputToolbar","Composer","Send","Bubble","messageApi","jsx","_jsx","SendMessageScreen","_ref","route","_route$params","params","senderId","receiverId","_useState","_useState2","_slicedToArray","messages","setMessages","loadMessageHistory","_ref2","_asyncToGenerator","history","getThread","formattedHistory","map","msg","_id","text","createdAt","Date","user","sender","name","username","position","reverse","error","console","apply","arguments","onSend","newMessages","length","undefined","message","sendMessage","receiver","previousMessages","append","renderSend","props","_objectSpread","children","style","marginRight","marginBottom","styles","container","renderInputToolbar","containerStyle","backgroundColor","renderComposer","textInputStyle","color","placeholder","renderBubble","wrapperStyle","right","left","parsePatterns","linkStyle","pattern","textDecorationLine","onPress","alert","timeFormat","create","flex"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/SendMessageScreen.js"],"sourcesContent":["// components/ChatScreen.js\r\n\r\nimport React, { useState, useCallback, useEffect } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { GiftedChat, InputToolbar, Composer, Send, Bubble } from 'react-native-gifted-chat';\r\nimport messageApi from '../api/messageApi';\r\n\r\nconst SendMessageScreen = ({ route }) => {\r\n\r\n  const { senderId, receiverId } = route.params;\r\n\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadMessageHistory = async () => {\r\n      try {\r\n        const history = await messageApi.getThread(senderId, receiverId);\r\n        const formattedHistory = history.map((msg) => {\r\n          return {\r\n            _id: msg._id,\r\n            text: msg.text,\r\n            createdAt: new Date(msg.createdAt),\r\n            user: {\r\n              _id: msg.sender,\r\n              name: msg.sender.username,\r\n            },\r\n            position: msg.sender === senderId ? 'right' : 'left',\r\n          };\r\n        });\r\n\r\n        setMessages(formattedHistory.reverse());\r\n      } catch (error) {\r\n        console.error('Error loading message history:', error);\r\n      }\r\n    };\r\n\r\n    loadMessageHistory();\r\n  }, [senderId, receiverId]);\r\n\r\n  const onSend = useCallback(async (newMessages = []) => {\r\n    const message = newMessages[0];\r\n    try {\r\n      await messageApi.sendMessage({\r\n        sender: senderId,\r\n        receiver: receiverId,\r\n        text: message.text,\r\n      });\r\n\r\n      setMessages((previousMessages) => GiftedChat.append(previousMessages, newMessages));\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  }, [senderId, receiverId]);\r\n\r\n  const renderSend = (props) => (\r\n    <Send {...props}>\r\n      <View style={{ marginRight: 10, marginBottom: 5 }}>\r\n        {/* Customize the Send button if needed */}\r\n      </View>\r\n    </Send>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <GiftedChat\r\n        messages={messages}\r\n        onSend={onSend}\r\n        user={{\r\n          _id: senderId,\r\n        }}\r\n        renderInputToolbar={(props) => (\r\n          <InputToolbar\r\n            {...props}\r\n            containerStyle={{ backgroundColor: 'white' }}\r\n          />\r\n        )}\r\n        renderComposer={(props) => (\r\n          <Composer\r\n            {...props}\r\n            textInputStyle={{ color: 'black', backgroundColor: 'lightgray' }}\r\n            placeholder=\"Type a message...\"\r\n          />\r\n        )}\r\n        renderSend={renderSend}\r\n        renderBubble={(props) => (\r\n          <Bubble\r\n            {...props}\r\n            wrapperStyle={{\r\n              right: { backgroundColor: '#007AFF' },\r\n              left: { backgroundColor: '#ededed' },\r\n            }}\r\n          />\r\n        )}\r\n        parsePatterns={(linkStyle) => [\r\n          {\r\n            pattern: /#(\\w+)/,\r\n            style: { color: 'orange', textDecorationLine: 'underline' },\r\n            onPress: (props) => alert(`Pressed on hashtag: ${props.text}`),\r\n          },\r\n        ]}\r\n        \r\n        timeFormat='LT'\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default SendMessageScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}