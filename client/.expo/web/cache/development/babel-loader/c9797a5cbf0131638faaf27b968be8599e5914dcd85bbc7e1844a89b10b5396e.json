{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { RootSiblingParent } from 'react-native-root-siblings';\nimport LoginScreen from \"./LoginScreen\";\nimport RegisterScreen from \"./RegisterScreen\";\nimport ProfileScreen from \"./ProfileScreen\";\nimport Navbar from \"./Navbar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar App = function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loggedIn = _useState2[0],\n    setLoggedIn = _useState2[1];\n  return _jsx(RootSiblingParent, {\n    children: _jsxs(NavigationContainer, {\n      children: [loggedIn ? _jsx(Stack.Navigator, {\n        initialRouteName: \"Profile\",\n        children: _jsx(Stack.Screen, {\n          name: \"Profile\",\n          component: ProfileScreen\n        })\n      }) : _jsxs(Stack.Navigator, {\n        initialRouteName: \"Login\",\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: function component(props) {\n            return _jsx(LoginScreen, _objectSpread(_objectSpread({}, props), {}, {\n              setLoggedIn: setLoggedIn\n            }));\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: function component(props) {\n            return _jsx(RegisterScreen, _objectSpread(_objectSpread({}, props), {}, {\n              setLoggedIn: setLoggedIn\n            }));\n          }\n        })]\n      }), _jsx(Navbar, {})]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","NavigationContainer","createStackNavigator","RootSiblingParent","LoginScreen","RegisterScreen","ProfileScreen","Navbar","jsx","_jsx","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","loggedIn","setLoggedIn","children","Navigator","initialRouteName","Screen","name","component","props","_objectSpread"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { RootSiblingParent } from 'react-native-root-siblings';\r\nimport LoginScreen from './LoginScreen';\r\nimport RegisterScreen from './RegisterScreen';\r\nimport ProfileScreen from './ProfileScreen';\r\nimport Navbar from './Navbar';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst App = () => {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  return (\r\n    <RootSiblingParent>\r\n      <NavigationContainer>\r\n        {loggedIn ? (\r\n          <Stack.Navigator initialRouteName=\"Profile\">\r\n            <Stack.Screen name=\"Profile\" component={ProfileScreen} />\r\n          </Stack.Navigator>\r\n        ) : (\r\n          <Stack.Navigator initialRouteName=\"Login\">\r\n            <Stack.Screen\r\n              name=\"Login\"\r\n              component={(props) => <LoginScreen {...props} setLoggedIn={setLoggedIn} />}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Register\"\r\n              component={(props) => <RegisterScreen {...props} setLoggedIn={setLoggedIn} />}\r\n            />\r\n          </Stack.Navigator>\r\n        )}\r\n        <Navbar />\r\n      </NavigationContainer>\r\n    </RootSiblingParent>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,OAAOC,WAAW;AAClB,OAAOC,cAAc;AACrB,OAAOC,aAAa;AACpB,OAAOC,MAAM;AAAiB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9B,IAAMC,KAAK,GAAGV,oBAAoB,CAAC,CAAC;AAEpC,IAAMW,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAAgCd,QAAQ,CAAC,KAAK,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,OACEN,IAAA,CAACN,iBAAiB;IAAAgB,QAAA,EAChBR,KAAA,CAACV,mBAAmB;MAAAkB,QAAA,GACjBF,QAAQ,GACPR,IAAA,CAACG,KAAK,CAACQ,SAAS;QAACC,gBAAgB,EAAC,SAAS;QAAAF,QAAA,EACzCV,IAAA,CAACG,KAAK,CAACU,MAAM;UAACC,IAAI,EAAC,SAAS;UAACC,SAAS,EAAElB;QAAc,CAAE;MAAC,CAC1C,CAAC,GAElBK,KAAA,CAACC,KAAK,CAACQ,SAAS;QAACC,gBAAgB,EAAC,OAAO;QAAAF,QAAA,GACvCV,IAAA,CAACG,KAAK,CAACU,MAAM;UACXC,IAAI,EAAC,OAAO;UACZC,SAAS,EAAE,SAAAA,UAACC,KAAK;YAAA,OAAKhB,IAAA,CAACL,WAAW,EAAAsB,aAAA,CAAAA,aAAA,KAAKD,KAAK;cAAEP,WAAW,EAAEA;YAAY,EAAE,CAAC;UAAA;QAAC,CAC5E,CAAC,EACFT,IAAA,CAACG,KAAK,CAACU,MAAM;UACXC,IAAI,EAAC,UAAU;UACfC,SAAS,EAAE,SAAAA,UAACC,KAAK;YAAA,OAAKhB,IAAA,CAACJ,cAAc,EAAAqB,aAAA,CAAAA,aAAA,KAAKD,KAAK;cAAEP,WAAW,EAAEA;YAAY,EAAE,CAAC;UAAA;QAAC,CAC/E,CAAC;MAAA,CACa,CAClB,EACDT,IAAA,CAACF,MAAM,IAAE,CAAC;IAAA,CACS;EAAC,CACL,CAAC;AAExB,CAAC;AAED,eAAeM,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}