{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as ExpoImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ImagePicker = function ImagePicker(image, setImage) {\n  var pickImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var result = yield ExpoImagePicker.launchImageLibraryAsync({\n        mediaTypes: ExpoImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n      console.log(result);\n      if (!result.canceled) {\n        setImage(result.assets[0].uri);\n      }\n    });\n    return function pickImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Button, {\n      title: \"Pick an image from camera roll\",\n      onPress: pickImage\n    }), image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 200,\n        height: 200\n      }\n    })]\n  });\n};\nexport default ImagePicker;","map":{"version":3,"names":["React","useState","useEffect","Button","Image","View","Platform","ExpoImagePicker","jsx","_jsx","jsxs","_jsxs","ImagePicker","image","setImage","pickImage","_ref","_asyncToGenerator","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","console","log","canceled","assets","uri","apply","arguments","style","flex","alignItems","justifyContent","children","title","onPress","source","width","height"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/ImagePicker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Image, View, Platform } from 'react-native';\r\nimport * as ExpoImagePicker from 'expo-image-picker';\r\n\r\n const ImagePicker = (image, setImage) => {\r\n\r\n  const pickImage = async () => {\r\n    // No permissions request is necessary for launching the image library\r\n    let result = await ExpoImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ExpoImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.canceled) {\r\n      setImage(result.assets[0].uri);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\r\n      {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ImagePicker;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAEnD,OAAO,KAAKC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAEC,QAAQ,EAAK;EAExC,IAAMC,SAAS;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAE5B,IAAIC,MAAM,SAASX,eAAe,CAACY,uBAAuB,CAAC;QACzDC,UAAU,EAAEb,eAAe,CAACc,gBAAgB,CAACC,GAAG;QAChDC,aAAa,EAAE,IAAI;QACnBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;MAEnB,IAAI,CAACA,MAAM,CAACU,QAAQ,EAAE;QACpBd,QAAQ,CAACI,MAAM,CAACW,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;MAChC;IACF,CAAC;IAAA,gBAdKf,SAASA,CAAA;MAAA,OAAAC,IAAA,CAAAe,KAAA,OAAAC,SAAA;IAAA;EAAA,GAcd;EAED,OACErB,KAAA,CAACN,IAAI;IAAC4B,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GACvE5B,IAAA,CAACN,MAAM;MAACmC,KAAK,EAAC,gCAAgC;MAACC,OAAO,EAAExB;IAAU,CAAE,CAAC,EACpEF,KAAK,IAAIJ,IAAA,CAACL,KAAK;MAACoC,MAAM,EAAE;QAAEV,GAAG,EAAEjB;MAAM,CAAE;MAACoB,KAAK,EAAE;QAAEQ,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI;IAAE,CAAE,CAAC;EAAA,CAC3E,CAAC;AAEX,CAAC;AAED,eAAe9B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}