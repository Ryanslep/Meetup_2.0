{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { apiBaseUrl } from \"../utils/apiUtils\";\nvar eventApi = {\n  getEvent: function () {\n    var _getEvent = _asyncToGenerator(function* (eventId) {\n      var response = yield fetch(`${apiBaseUrl}/event/fetch/${eventId}`);\n      var events = yield response.json();\n      return events;\n    });\n    function getEvent(_x) {\n      return _getEvent.apply(this, arguments);\n    }\n    return getEvent;\n  }(),\n  getEvents: function () {\n    var _getEvents = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(`${apiBaseUrl}/event/fetch`);\n        var events = yield response.json();\n        var modifiedEvents = events.map(function (event) {\n          return _objectSpread(_objectSpread({}, event), {}, {\n            date: localDate(event.date),\n            startTime: localTime(event.startTime),\n            endTime: localTime(event.endTime)\n          });\n        });\n        return modifiedEvents;\n      } catch (error) {\n        console.error('Error fetching events:', error);\n        throw error;\n      }\n    });\n    function getEvents() {\n      return _getEvents.apply(this, arguments);\n    }\n    return getEvents;\n  }(),\n  create: function () {\n    var _create = _asyncToGenerator(function* (formData) {\n      var requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      };\n      var response = yield fetch(`${apiBaseUrl}/event/create`, requestOptions);\n      var event = yield response.json();\n      return event;\n    });\n    function create(_x2) {\n      return _create.apply(this, arguments);\n    }\n    return create;\n  }(),\n  update: function () {\n    var _update = _asyncToGenerator(function* (eventId, formData) {\n      var requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      };\n      var response = yield fetch(`${apiBaseUrl}/event/update/${eventId}`, requestOptions);\n      var updatedEvent = yield response.json();\n      return updatedEvent;\n    });\n    function update(_x3, _x4) {\n      return _update.apply(this, arguments);\n    }\n    return update;\n  }(),\n  rsvp: function () {\n    var _rsvp = _asyncToGenerator(function* (eventId, hostId) {\n      try {\n        var response = yield fetch(`${apiBaseUrl}/event/rsvp/${eventId}/${hostId}`, {\n          method: 'POST'\n        });\n        if (response.ok) {\n          var result = yield response.json();\n          return result;\n        } else {\n          var error = yield response.json();\n          throw new Error(error.message);\n        }\n      } catch (error) {\n        console.error('Error RSVPing to event:', error);\n        throw new Error('Failed to RSVP to event');\n      }\n    });\n    function rsvp(_x5, _x6) {\n      return _rsvp.apply(this, arguments);\n    }\n    return rsvp;\n  }(),\n  delete: function () {\n    var _delete2 = _asyncToGenerator(function* (eventId, userId) {\n      var requestOptions = {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      var response = yield fetch(`${apiBaseUrl}/event/delete/${eventId}/${userId}`, requestOptions);\n      if (response.status === 200) {\n        var result = yield response.json();\n        return result;\n      } else {\n        throw new Error('Failed to delete event');\n      }\n    });\n    function _delete(_x7, _x8) {\n      return _delete2.apply(this, arguments);\n    }\n    return _delete;\n  }(),\n  reportEvent: function () {\n    var _reportEvent = _asyncToGenerator(function* (eventId, reportData) {\n      try {\n        var response = yield fetch(`${apiBaseUrl}/event/report`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            eventId: eventId,\n            reportData: reportData\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      } catch (error) {\n        console.error('Error reporting event:', error);\n        throw error;\n      }\n    });\n    function reportEvent(_x9, _x10) {\n      return _reportEvent.apply(this, arguments);\n    }\n    return reportEvent;\n  }(),\n  getRsvpList: function () {\n    var _getRsvpList = _asyncToGenerator(function* (eventId) {\n      try {\n        var response = yield fetch(`${apiBaseUrl}/events/${eventId}/rsvps`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch RSVP list');\n        }\n        var data = yield response.json();\n        return data;\n      } catch (error) {\n        console.error('Error fetching RSVP list:', error);\n        throw error;\n      }\n    });\n    function getRsvpList(_x11) {\n      return _getRsvpList.apply(this, arguments);\n    }\n    return getRsvpList;\n  }()\n};\nexport default eventApi;","map":{"version":3,"names":["apiBaseUrl","eventApi","getEvent","_getEvent","_asyncToGenerator","eventId","response","fetch","events","json","_x","apply","arguments","getEvents","_getEvents","modifiedEvents","map","event","_objectSpread","date","localDate","startTime","localTime","endTime","error","console","create","_create","formData","requestOptions","method","headers","body","JSON","stringify","_x2","update","_update","updatedEvent","_x3","_x4","rsvp","_rsvp","hostId","ok","result","Error","message","_x5","_x6","delete","_delete2","userId","status","_delete","_x7","_x8","reportEvent","_reportEvent","reportData","_x9","_x10","getRsvpList","_getRsvpList","data","_x11"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/api/eventApi.js"],"sourcesContent":["import { apiBaseUrl } from '../utils/apiUtils';\r\n\r\nconst eventApi = {\r\n  getEvent: async (eventId) => {\r\n    const response = await fetch(`${apiBaseUrl}/event/fetch/${eventId}`);\r\n\r\n    const events = await response.json();\r\n    return events;\r\n  },\r\n  getEvents: async () => {\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/event/fetch`);\r\n      const events = await response.json();\r\n\r\n      const modifiedEvents = events.map(event => ({\r\n        ...event,\r\n        date: localDate(event.date),\r\n        startTime: localTime(event.startTime),\r\n        endTime: localTime(event.endTime),\r\n      }));\r\n\r\n      return modifiedEvents;\r\n    } catch (error) {\r\n      console.error('Error fetching events:', error);\r\n      throw error; // Rethrow the error to handle it in the component\r\n    }\r\n  },\r\n  create: async (formData) => {\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(formData),\r\n    };\r\n\r\n    const response = await fetch(`${apiBaseUrl}/event/create`, requestOptions);\r\n\r\n    const event = await response.json();\r\n    return event;\r\n  },\r\n\r\n  update: async (eventId, formData) => {\r\n    const requestOptions = {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify(formData),\r\n    }\r\n\r\n    const response = await fetch(`${apiBaseUrl}/event/update/${eventId}`, requestOptions);\r\n    const updatedEvent = await response.json();\r\n    return updatedEvent;\r\n  },\r\n\r\n  rsvp: async (eventId, hostId) => {\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/event/rsvp/${eventId}/${hostId}`, {\r\n        method: 'POST',\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        return result;\r\n      } else {\r\n        const error = await response.json();\r\n        throw new Error(error.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error RSVPing to event:', error);\r\n      throw new Error('Failed to RSVP to event');\r\n    }\r\n  }, \r\n\r\n  delete: async (eventId, userId) => {\r\n    const requestOptions = {\r\n      method: 'DELETE', // Change this to 'DELETE'\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n  \r\n    const response = await fetch(`${apiBaseUrl}/event/delete/${eventId}/${userId}`, requestOptions); // Adjust the endpoint\r\n  \r\n    if (response.status === 200) {\r\n      const result = await response.json();\r\n      return result;\r\n    } else {\r\n      throw new Error('Failed to delete event');\r\n    }\r\n  },\r\n  reportEvent: async (eventId, reportData) => {\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/event/report`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          eventId,\r\n          reportData,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('Error reporting event:', error);\r\n      throw error; // Rethrow the error for the caller to handle\r\n    }\r\n  },\r\n  getRsvpList: async (eventId) => {\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/events/${eventId}/rsvps`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch RSVP list');\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching RSVP list:', error);\r\n      throw error;\r\n    }\r\n  },\r\n}\r\n\r\nexport default eventApi;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}