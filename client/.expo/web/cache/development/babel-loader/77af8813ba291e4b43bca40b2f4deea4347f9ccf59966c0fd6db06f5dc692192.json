{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport FlexInput from \"./FlexInput\";\nimport SubmitButton from \"./SubmitButton\";\nimport CustomAlert from \"./CustomAlert\";\nimport userApi from \"../api/userApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginForm = function LoginForm(_ref) {\n  _objectDestructuringEmpty(_ref);\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    response = _useState6[0],\n    setResponse = _useState6[1];\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var navigation = useNavigation();\n      console.log('Username:', username);\n      console.log('Password:', password);\n      var sendLogin = yield userApi.login(username, password);\n      var response = yield sendLogin;\n      console.log(response);\n      if (response.message) {\n        console.log(\"Login Message: \" + response.message);\n      }\n      setResponse(response);\n      if (response && response.success) {\n        navigation.navigate('Register');\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlexInput, {\n      type: \"text\",\n      placeholder: \"Username or Email\",\n      value: username,\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      }\n    }), _jsx(FlexInput, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(SubmitButton, {\n      title: \"Login\",\n      onPress: handleLogin\n    }), response && _jsx(CustomAlert, {\n      response: response\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    minWidth: '100%'\n  }\n});\nexport default LoginForm;","map":{"version":3,"names":["React","useState","View","StyleSheet","useNavigation","FlexInput","SubmitButton","CustomAlert","userApi","jsx","_jsx","jsxs","_jsxs","LoginForm","_ref","_objectDestructuringEmpty","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","response","setResponse","handleLogin","_ref2","_asyncToGenerator","navigation","console","log","sendLogin","login","message","success","navigate","apply","arguments","style","styles","container","children","type","placeholder","value","onChangeText","text","title","onPress","create","padding","minWidth"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport FlexInput from './FlexInput';\r\nimport SubmitButton from './SubmitButton';\r\nimport CustomAlert from './CustomAlert';\r\n\r\nimport userApi from '../api/userApi';\r\n\r\nconst LoginForm = ({}) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [response, setResponse] = useState(null);\r\n\r\n  const handleLogin = async () => {\r\n    const navigation = useNavigation(); // Hook for navigation\r\n\r\n    console.log('Username:', username);\r\n    console.log('Password:', password);\r\n\r\n    const sendLogin = await userApi.login(username, password);\r\n    const response = await sendLogin;\r\n    console.log(response);\r\n    if(response.message) {\r\n        console.log(\"Login Message: \" + response.message)\r\n    }\r\n    setResponse(response);\r\n    if (response && response.success) {\r\n        // Navigate to the next screen (replace 'Home' with your screen name)\r\n        navigation.navigate('Register');\r\n      }\r\n    \r\n    // You can add logic to show a toast message here based on the response\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlexInput\r\n        type=\"text\"\r\n        placeholder=\"Username or Email\"\r\n        value={username}\r\n        onChangeText={(text) => setUsername(text)}\r\n      />\r\n      <FlexInput\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)}\r\n      />\r\n      <SubmitButton title=\"Login\" onPress={handleLogin} \r\n      />\r\n      {response && <CustomAlert response={response} />}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n    minWidth: '100%'\r\n  },\r\n});\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}