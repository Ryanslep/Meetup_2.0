{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport EventCard from \"./EventCard\";\nimport NavButton from \"./NavButton\";\nimport eventApi from \"../api/eventApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BrowseScreen = function BrowseScreen(_ref) {\n  var getUserId = _ref.getUserId;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    events = _useState2[0],\n    setEvents = _useState2[1];\n  console.log(userId);\n  useEffect(function () {\n    var fetchEvents = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var eventData = yield eventApi.getEvents();\n          setEvents(eventData);\n        } catch (error) {\n          console.error('Error fetching events:', error);\n        }\n      });\n      return function fetchEvents() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchEvents();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Browse\"\n    }), _jsx(NavButton, {\n      title: \"Create Event\",\n      to: \"Create Event\"\n    }), _jsx(ScrollView, {\n      children: events ? events.map(function (event) {\n        return _jsx(EventCard, {\n          event: event,\n          userId: getUserId()\n        }, event._id);\n      }) : _jsx(Text, {\n        children: \"Issue Retrieving Events from the database\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default BrowseScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","ScrollView","EventCard","NavButton","eventApi","jsx","_jsx","jsxs","_jsxs","BrowseScreen","_ref","getUserId","_useState","_useState2","_slicedToArray","events","setEvents","console","log","userId","fetchEvents","_ref2","_asyncToGenerator","eventData","getEvents","error","apply","arguments","style","styles","container","children","title","to","map","event","_id","create","flex","justifyContent","alignItems"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/BrowseScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\n\r\nimport EventCard from './EventCard';\r\nimport NavButton from './NavButton';\r\n\r\nimport eventApi from '../api/eventApi';\r\n\r\nconst BrowseScreen = ({ getUserId }) => {\r\n    const [events, setEvents] = useState(null);\r\n    console.log(userId)\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            try {\r\n                const eventData = await eventApi.getEvents();\r\n                setEvents(eventData);\r\n            } catch (error) {\r\n                console.error('Error fetching events:', error);\r\n            }\r\n        };\r\n        fetchEvents();\r\n    }, [])\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text>Browse</Text>\r\n            <NavButton title='Create Event' to='Create Event' />\r\n            <ScrollView>\r\n                {events ? (\r\n                    events.map(event => <EventCard key={event._id} event={event} userId={getUserId()} />)\r\n                ) : (\r\n                    <Text>Issue Retrieving Events from the database</Text>\r\n                )}\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nexport default BrowseScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAGnD,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAEhB,OAAOC,QAAQ;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAsB;EAAA,IAAhBC,SAAS,GAAAD,IAAA,CAATC,SAAS;EAC7B,IAAAC,SAAA,GAA4Bf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxBI,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;EACnBvB,SAAS,CAAC,YAAM;IACZ,IAAMwB,WAAW;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAC5B,IAAI;UACA,IAAMC,SAAS,SAASnB,QAAQ,CAACoB,SAAS,CAAC,CAAC;UAC5CR,SAAS,CAACO,SAAS,CAAC;QACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACZR,OAAO,CAACQ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAClD;MACJ,CAAC;MAAA,gBAPKL,WAAWA,CAAA;QAAA,OAAAC,KAAA,CAAAK,KAAA,OAAAC,SAAA;MAAA;IAAA,GAOhB;IACDP,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,OACIZ,KAAA,CAACV,IAAI;IAAC8B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BzB,IAAA,CAACP,IAAI;MAAAgC,QAAA,EAAC;IAAM,CAAM,CAAC,EACnBzB,IAAA,CAACH,SAAS;MAAC6B,KAAK,EAAC,cAAc;MAACC,EAAE,EAAC;IAAc,CAAE,CAAC,EACpD3B,IAAA,CAACL,UAAU;MAAA8B,QAAA,EACNhB,MAAM,GACHA,MAAM,CAACmB,GAAG,CAAC,UAAAC,KAAK;QAAA,OAAI7B,IAAA,CAACJ,SAAS;UAAiBiC,KAAK,EAAEA,KAAM;UAAChB,MAAM,EAAER,SAAS,CAAC;QAAE,GAA7CwB,KAAK,CAACC,GAAyC,CAAC;MAAA,EAAC,GAErF9B,IAAA,CAACP,IAAI;QAAAgC,QAAA,EAAC;MAAyC,CAAM;IACxD,CACO,CAAC;EAAA,CACX,CAAC;AAEf,CAAC;AAED,IAAMF,MAAM,GAAG7B,UAAU,CAACqC,MAAM,CAAC;EAC7BP,SAAS,EAAE;IACPQ,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AAEF,eAAe/B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}