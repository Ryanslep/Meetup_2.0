{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { apiBaseUrl } from \"../utils/apiUtils\";\nimport { localTime, localDate } from \"../utils/formatFunctions\";\nvar eventApi = {\n  getEvent: function () {\n    var _getEvent = _asyncToGenerator(function* (eventId) {\n      var response = yield fetch(`${apiBaseUrl}/event/fetch/${eventId}`);\n      var events = yield response.json();\n      return events;\n    });\n    function getEvent(_x) {\n      return _getEvent.apply(this, arguments);\n    }\n    return getEvent;\n  }(),\n  getEvents: function () {\n    var _getEvents = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(`${apiBaseUrl}/event/fetch`);\n        var events = yield response.json();\n        return events;\n      } catch (error) {\n        console.error('Error fetching events:', error);\n        throw error;\n      }\n    });\n    function getEvents() {\n      return _getEvents.apply(this, arguments);\n    }\n    return getEvents;\n  }(),\n  create: function () {\n    var _create = _asyncToGenerator(function* (formData) {\n      var requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      };\n      var response = yield fetch(`${apiBaseUrl}/event/create`, requestOptions);\n      var event = yield response.json();\n      return event;\n    });\n    function create(_x2) {\n      return _create.apply(this, arguments);\n    }\n    return create;\n  }(),\n  update: function () {\n    var _update = _asyncToGenerator(function* (eventId, formData) {\n      var requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      };\n      var response = yield fetch(`${apiBaseUrl}/event/update/${eventId}`, requestOptions);\n      var updatedEvent = yield response.json();\n      return updatedEvent;\n    });\n    function update(_x3, _x4) {\n      return _update.apply(this, arguments);\n    }\n    return update;\n  }(),\n  rsvp: function () {\n    var _rsvp = _asyncToGenerator(function* (eventId, hostId) {\n      try {\n        var response = yield fetch(`${apiBaseUrl}/event/rsvp/${eventId}/${hostId}`, {\n          method: 'POST'\n        });\n        if (response.ok) {\n          var result = yield response.json();\n          return result;\n        } else {\n          var error = yield response.json();\n          throw new Error(error.message);\n        }\n      } catch (error) {\n        console.error('Error RSVPing to event:', error);\n        throw new Error('Failed to RSVP to event');\n      }\n    });\n    function rsvp(_x5, _x6) {\n      return _rsvp.apply(this, arguments);\n    }\n    return rsvp;\n  }(),\n  delete: function () {\n    var _delete2 = _asyncToGenerator(function* (eventId, userId) {\n      var requestOptions = {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      var response = yield fetch(`${apiBaseUrl}/event/delete/${eventId}/${userId}`, requestOptions);\n      if (response.status === 200) {\n        var result = yield response.json();\n        return result;\n      } else {\n        throw new Error('Failed to delete event');\n      }\n    });\n    function _delete(_x7, _x8) {\n      return _delete2.apply(this, arguments);\n    }\n    return _delete;\n  }(),\n  reportEvent: function () {\n    var _reportEvent = _asyncToGenerator(function* (eventId, reportData) {\n      try {\n        var response = yield fetch(`${apiBaseUrl}/event/report`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            eventId: eventId,\n            reportData: reportData\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      } catch (error) {\n        console.error('Error reporting event:', error);\n        throw error;\n      }\n    });\n    function reportEvent(_x9, _x10) {\n      return _reportEvent.apply(this, arguments);\n    }\n    return reportEvent;\n  }(),\n  getRsvpList: function () {\n    var _getRsvpList = _asyncToGenerator(function* (eventId) {\n      try {\n        var response = yield fetch(`${apiBaseUrl}/events/${eventId}/rsvps`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch RSVP list');\n        }\n        var data = yield response.json();\n        return data;\n      } catch (error) {\n        console.error('Error fetching RSVP list:', error);\n        throw error;\n      }\n    });\n    function getRsvpList(_x11) {\n      return _getRsvpList.apply(this, arguments);\n    }\n    return getRsvpList;\n  }()\n};\nexport default eventApi;","map":{"version":3,"names":["apiBaseUrl","localTime","localDate","eventApi","getEvent","_getEvent","_asyncToGenerator","eventId","response","fetch","events","json","_x","apply","arguments","getEvents","_getEvents","error","console","create","_create","formData","requestOptions","method","headers","body","JSON","stringify","event","_x2","update","_update","updatedEvent","_x3","_x4","rsvp","_rsvp","hostId","ok","result","Error","message","_x5","_x6","delete","_delete2","userId","status","_delete","_x7","_x8","reportEvent","_reportEvent","reportData","_x9","_x10","getRsvpList","_getRsvpList","data","_x11"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/api/eventApi.js"],"sourcesContent":["import { apiBaseUrl } from '../utils/apiUtils';\r\nimport { localTime, localDate } from '../utils/formatFunctions';\r\n\r\nconst eventApi = {\r\n  getEvent: async (eventId) => {\r\n    const response = await fetch(`${apiBaseUrl}/event/fetch/${eventId}`);\r\n\r\n    const events = await response.json();\r\n    return events;\r\n  },\r\n  getEvents: async () => {\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/event/fetch`);\r\n      const events = await response.json();\r\n\r\n      return events;\r\n    } catch (error) {\r\n      console.error('Error fetching events:', error);\r\n      throw error; // Rethrow the error to handle it in the component\r\n    }\r\n  },\r\n  create: async (formData) => {\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(formData),\r\n    };\r\n\r\n    const response = await fetch(`${apiBaseUrl}/event/create`, requestOptions);\r\n\r\n    const event = await response.json();\r\n    return event;\r\n  },\r\n\r\n  update: async (eventId, formData) => {\r\n    const requestOptions = {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify(formData),\r\n    }\r\n\r\n    const response = await fetch(`${apiBaseUrl}/event/update/${eventId}`, requestOptions);\r\n    const updatedEvent = await response.json();\r\n    return updatedEvent;\r\n  },\r\n\r\n  rsvp: async (eventId, hostId) => {\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/event/rsvp/${eventId}/${hostId}`, {\r\n        method: 'POST',\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        return result;\r\n      } else {\r\n        const error = await response.json();\r\n        throw new Error(error.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error RSVPing to event:', error);\r\n      throw new Error('Failed to RSVP to event');\r\n    }\r\n  }, \r\n\r\n  delete: async (eventId, userId) => {\r\n    const requestOptions = {\r\n      method: 'DELETE', // Change this to 'DELETE'\r\n      headers: { 'Content-Type': 'application/json' },\r\n    };\r\n  \r\n    const response = await fetch(`${apiBaseUrl}/event/delete/${eventId}/${userId}`, requestOptions); // Adjust the endpoint\r\n  \r\n    if (response.status === 200) {\r\n      const result = await response.json();\r\n      return result;\r\n    } else {\r\n      throw new Error('Failed to delete event');\r\n    }\r\n  },\r\n  reportEvent: async (eventId, reportData) => {\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/event/report`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          eventId,\r\n          reportData,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('Error reporting event:', error);\r\n      throw error; // Rethrow the error for the caller to handle\r\n    }\r\n  },\r\n  getRsvpList: async (eventId) => {\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/events/${eventId}/rsvps`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch RSVP list');\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching RSVP list:', error);\r\n      throw error;\r\n    }\r\n  },\r\n}\r\n\r\nexport default eventApi;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}