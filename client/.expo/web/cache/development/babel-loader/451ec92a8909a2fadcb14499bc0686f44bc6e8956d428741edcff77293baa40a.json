{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ProfileBanner from \"./ProfileBanner\";\nimport EventCard from \"./EventCard\";\nimport { useAppContext } from \"./AppContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var _useAppContext = useAppContext(),\n    user = _useAppContext.user,\n    setLoggedIn = _useAppContext.setLoggedIn,\n    myEvents = _useAppContext.myEvents,\n    setMyEvents = _useAppContext.setMyEvents,\n    myRsvps = _useAppContext.myRsvps,\n    setMyRsvps = _useAppContext.setMyRsvps,\n    setBrowseEvents = _useAppContext.setBrowseEvents;\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var eventsData = yield userApi.getMyEvents(user._id);\n        setMyEvents(eventsData);\n        var rsvpData = yield userApi.getMyRsvps(user._id);\n        setMyRsvps(rsvpData);\n      });\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, [user._id, setMyEvents, setMyRsvps]);\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(ProfileBanner, {\n      user: user,\n      setLoggedIn: setLoggedIn\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Hosting\"\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: styles.scrollView,\n        children: myEvents && myEvents.map(function (event) {\n          return _jsx(EventCard, {\n            event: event,\n            userId: user._id,\n            setMyEvents: setMyEvents,\n            setMyRsvps: setMyRsvps,\n            setBrowseEvents: setBrowseEvents\n          }, event._id);\n        })\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Attending\"\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: styles.scrollView,\n        children: myRsvps && myRsvps.map(function (event) {\n          return _jsx(EventCard, {\n            event: event,\n            userId: user._id,\n            setMyEvents: setMyEvents,\n            setMyRsvps: setMyRsvps,\n            setBrowseEvents: setBrowseEvents\n          }, event._id);\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 10\n  },\n  label: {\n    alignSelf: 'flex-start',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: 'black'\n  },\n  scrollView: {\n    width: '100%'\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","View","Text","StyleSheet","ScrollView","ProfileBanner","EventCard","useAppContext","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_useAppContext","user","setLoggedIn","myEvents","setMyEvents","myRsvps","setMyRsvps","setBrowseEvents","fetchData","_ref","_asyncToGenerator","eventsData","userApi","getMyEvents","_id","rsvpData","getMyRsvps","apply","arguments","style","styles","container","children","label","horizontal","showsHorizontalScrollIndicator","scrollView","map","event","userId","create","flex","paddingLeft","paddingRight","paddingBottom","alignSelf","fontSize","fontWeight","marginBottom","color","width"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/ProfileScreen.js"],"sourcesContent":["// ProfileScreen.js\r\nimport React, { useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport ProfileBanner from './ProfileBanner';\r\nimport EventCard from './EventCard';\r\nimport { useAppContext } from './AppContext'; // Import the useAppContext hook\r\n\r\nconst ProfileScreen = () => {\r\n  // Use the useAppContext hook to access the shared state\r\n  const { user, setLoggedIn, myEvents, setMyEvents, myRsvps, setMyRsvps, setBrowseEvents } = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      // Use the user from context\r\n      const eventsData = await userApi.getMyEvents(user._id);\r\n      setMyEvents(eventsData);\r\n      const rsvpData = await userApi.getMyRsvps(user._id);\r\n      setMyRsvps(rsvpData);\r\n    };\r\n\r\n    fetchData();\r\n  }, [user._id, setMyEvents, setMyRsvps]);\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <ProfileBanner user={user} setLoggedIn={setLoggedIn} />\r\n\r\n      <View>\r\n        <Text style={styles.label}>Hosting</Text>\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.scrollView}>\r\n          {myEvents &&\r\n            myEvents.map((event) => (\r\n              <EventCard key={event._id} event={event} userId={user._id} setMyEvents={setMyEvents} setMyRsvps={setMyRsvps} setBrowseEvents={setBrowseEvents}/>\r\n            ))}\r\n        </ScrollView>\r\n      </View>\r\n\r\n      <View>\r\n        <Text style={styles.label}>Attending</Text>\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.scrollView}>\r\n          {myRsvps &&\r\n            myRsvps.map((event) => (\r\n              <EventCard key={event._id} event={event} userId={user._id} setMyEvents={setMyEvents} setMyRsvps={setMyRsvps} setBrowseEvents={setBrowseEvents} />\r\n            ))}\r\n        </ScrollView>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  label: {\r\n    alignSelf: 'flex-start',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    color: 'black',\r\n  },\r\n  scrollView: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}