{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ProfileBanner from \"./ProfileBanner\";\nimport userApi from \"../api/userApi\";\nimport EventCard from \"./EventCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen(_ref) {\n  var user = _ref.user,\n    setLoggedIn = _ref.setLoggedIn,\n    myRsvps = _ref.myRsvps,\n    setMyRsvps = _ref.setMyRsvps;\n  console.log('profile screen triggered');\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    events = _useState2[0],\n    setEvents = _useState2[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var eventsData = yield userApi.getMyEvents(user._id);\n        setEvents(eventsData);\n        var rsvpData = yield userApi.getMyRsvps(user._id);\n        setMyRsvps(rsvpData);\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(ProfileBanner, {\n      user: user,\n      setLoggedIn: setLoggedIn\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Hosting\"\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: styles.scrollView,\n        children: events && events.map(function (event) {\n          return _jsx(EventCard, {\n            event: event,\n            userId: user._id,\n            setMyRsvps: setMyRsvps\n          }, event._id);\n        })\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Attending\"\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: styles.scrollView,\n        children: myRsvps && myRsvps.map(function (event) {\n          return _jsx(EventCard, {\n            event: event,\n            userId: user._id,\n            setMyRsvps: setMyRsvps\n          }, event._id);\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 10\n  },\n  label: {\n    alignSelf: 'flex-start',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: 'black'\n  },\n  scrollView: {\n    width: '100%'\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","ScrollView","ProfileBanner","userApi","EventCard","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_ref","user","setLoggedIn","myRsvps","setMyRsvps","console","log","_useState","_useState2","_slicedToArray","events","setEvents","fetchData","_ref2","_asyncToGenerator","eventsData","getMyEvents","_id","rsvpData","getMyRsvps","apply","arguments","style","styles","container","children","label","horizontal","showsHorizontalScrollIndicator","scrollView","map","event","userId","create","flex","paddingLeft","paddingRight","paddingBottom","alignSelf","fontSize","fontWeight","marginBottom","color","width"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/ProfileScreen.js"],"sourcesContent":["// ProfileScreen.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport ProfileBanner from './ProfileBanner';\r\nimport userApi from '../api/userApi';\r\nimport EventCard from './EventCard';\r\n\r\nconst ProfileScreen = ({ user, setLoggedIn, myRsvps, setMyRsvps }) => {\r\n  console.log('profile screen triggered')\r\n  const [events, setEvents] = useState(null);\r\n  // const [rsvps, setRsvps] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const eventsData = await userApi.getMyEvents(user._id);\r\n      setEvents(eventsData);\r\n      const rsvpData = await userApi.getMyRsvps(user._id);\r\n      setMyRsvps(rsvpData)\r\n      // setRsvps(rsvpData);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <ProfileBanner user={user} setLoggedIn={setLoggedIn} />\r\n\r\n      <View>\r\n        <Text style={styles.label}>Hosting</Text>\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.scrollView}>\r\n          {events &&\r\n            events.map((event) => (\r\n              <EventCard key={event._id} event={event} userId={user._id} setMyRsvps={setMyRsvps}/>\r\n            ))}\r\n        </ScrollView>\r\n      </View>\r\n\r\n      <View>\r\n        <Text style={styles.label}>Attending</Text>\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.scrollView}>\r\n          {myRsvps &&\r\n            myRsvps.map((event) => (\r\n              <EventCard key={event._id} event={event} userId={user._id} setMyRsvps={setMyRsvps} />\r\n            ))}\r\n        </ScrollView>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  label: {\r\n    alignSelf: 'flex-start',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    color: 'black',\r\n  },\r\n  scrollView: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}