{"ast":null,"code":"export var getLocalDate = function getLocalDate(utcTimestamp) {\n  var utcDate = new Date(utcTimestamp);\n  var localDate = new Date(utcDate.getTime() + utcDate.getTimezoneOffset() * 60000);\n  return localDate;\n};\nexport var formatTime = function formatTime(localDate) {\n  var options = {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  };\n  var localTime = localDate.toLocaleString('en-US', options);\n  return localTime;\n};","map":{"version":3,"names":["getLocalDate","utcTimestamp","utcDate","Date","localDate","getTime","getTimezoneOffset","formatTime","options","hour","minute","hour12","localTime","toLocaleString"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/utils/formatFunctions.js"],"sourcesContent":["// Function to convert UTC timestamp to local date\r\nexport const getLocalDate = (utcTimestamp) => {\r\n  const utcDate = new Date(utcTimestamp);\r\n  const localDate = new Date(utcDate.getTime() + utcDate.getTimezoneOffset() * 60000);\r\n  return localDate;\r\n};\r\n\r\n// Function to format local time as hh:mm am/pm\r\nexport const formatTime = (localDate) => {\r\n  const options = { hour: 'numeric', minute: 'numeric', hour12: true };\r\n  const localTime = localDate.toLocaleString('en-US', options);\r\n  return localTime;\r\n};\r\n"],"mappings":"AACA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAYA,CAAIC,YAAY,EAAK;EAC5C,IAAMC,OAAO,GAAG,IAAIC,IAAI,CAACF,YAAY,CAAC;EACtC,IAAMG,SAAS,GAAG,IAAID,IAAI,CAACD,OAAO,CAACG,OAAO,CAAC,CAAC,GAAGH,OAAO,CAACI,iBAAiB,CAAC,CAAC,GAAG,KAAK,CAAC;EACnF,OAAOF,SAAS;AAClB,CAAC;AAGD,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAIH,SAAS,EAAK;EACvC,IAAMI,OAAO,GAAG;IAAEC,IAAI,EAAE,SAAS;IAAEC,MAAM,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC;EACpE,IAAMC,SAAS,GAAGR,SAAS,CAACS,cAAc,CAAC,OAAO,EAAEL,OAAO,CAAC;EAC5D,OAAOI,SAAS;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}