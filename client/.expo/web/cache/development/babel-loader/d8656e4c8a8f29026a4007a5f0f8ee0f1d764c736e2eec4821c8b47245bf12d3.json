{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport profilePlacholder from \"../assets/profile-placeholder.jpg\";\nimport NavButton from \"./NavButton\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileBanner = function ProfileBanner(_ref) {\n  var user = _ref.user,\n    setLoggedIn = _ref.setLoggedIn;\n  var navigation = useNavigation();\n  var handleLogOut = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var clearingSession = yield AsyncStorage.removeItem('@userId');\n      console.log(clearingSession);\n      if (clearingSession) {\n        setLoggedIn(false);\n        navigation.navigate('Login');\n      }\n    });\n    return function handleLogOut() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ImageBackground, {\n    source: require(\"../assets/profile-background.webp\"),\n    style: styles.banner,\n    children: [_jsx(Pressable, {\n      style: styles.button,\n      onPress: handleLogOut,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Sign Out\"\n      })\n    }), _jsx(View, {\n      style: styles.profileContainer,\n      children: _jsx(Image, {\n        style: styles.profilePlacholder,\n        source: profilePlacholder\n      })\n    }), _jsx(Text, {\n      style: styles.fullName,\n      children: user.fullName\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  banner: {\n    width: wp('100%'),\n    minHeight: hp('33%'),\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingBottom: hp('4%'),\n    marginBottom: hp('1%')\n  },\n  profileContainer: {\n    width: 150,\n    height: 150,\n    borderRadius: 75,\n    overflow: 'hidden'\n  },\n  profilePlacholder: {\n    width: '100%',\n    height: '100%'\n  },\n  fullName: {\n    marginTop: 25,\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  button: {\n    backgroundColor: 'red',\n    padding: 10,\n    borderRadius: 5\n  },\n  text: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default ProfileBanner;","map":{"version":3,"names":["React","ImageBackground","StyleSheet","Image","View","Text","Pressable","heightPercentageToDP","hp","widthPercentageToDP","wp","profilePlacholder","NavButton","AsyncStorage","useNavigation","jsx","_jsx","jsxs","_jsxs","ProfileBanner","_ref","user","setLoggedIn","navigation","handleLogOut","_ref2","_asyncToGenerator","clearingSession","removeItem","console","log","navigate","apply","arguments","source","require","style","styles","banner","children","button","onPress","text","profileContainer","fullName","create","width","minHeight","alignItems","justifyContent","paddingBottom","marginBottom","height","borderRadius","overflow","marginTop","fontSize","fontWeight","color","backgroundColor","padding"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/ProfileBanner.js"],"sourcesContent":["// ProfileBanner.js\r\nimport React from 'react';\r\nimport { ImageBackground, StyleSheet, Image, View, Text, Pressable } from 'react-native';\r\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\r\nimport profilePlacholder from '../assets/profile-placeholder.jpg';\r\nimport NavButton from './NavButton';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst ProfileBanner = ({ user, setLoggedIn }) => {\r\n    const navigation = useNavigation();\r\n\r\n    const handleLogOut = async () => {\r\n        const clearingSession = await AsyncStorage.removeItem('@userId');\r\n        console.log(clearingSession)\r\n        if (clearingSession) {\r\n            setLoggedIn(false);\r\n            navigation.navigate('Login')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ImageBackground source={require('../assets/profile-background.webp')} style={styles.banner}>\r\n            <Pressable style={styles.button} onPress={handleLogOut}>\r\n                <Text style={styles.text}>Sign Out</Text>\r\n            </Pressable>\r\n            <View style={styles.profileContainer}>\r\n\r\n                <Image style={styles.profilePlacholder} source={profilePlacholder} />\r\n            </View>\r\n            <Text style={styles.fullName}>{user.fullName}</Text>\r\n        </ImageBackground>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    banner: {\r\n        width: wp('100%'),\r\n        minHeight: hp('33%'),\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        paddingBottom: hp('4%'),\r\n        marginBottom: hp('1%')\r\n    },\r\n    profileContainer: {\r\n        width: 150,\r\n        height: 150,\r\n        borderRadius: 75,\r\n        overflow: 'hidden',\r\n    },\r\n    profilePlacholder: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    fullName: {\r\n        marginTop: 25,\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n    },\r\n    button: {\r\n        backgroundColor: 'red', // Change the background color as needed\r\n        padding: 10,\r\n        borderRadius: 5,\r\n    },\r\n    text: {\r\n        color: 'white', // Change the text color as needed\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n\r\nexport default ProfileBanner;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}