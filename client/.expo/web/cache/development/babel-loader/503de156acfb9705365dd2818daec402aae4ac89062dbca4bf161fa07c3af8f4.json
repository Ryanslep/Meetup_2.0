{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport FlexInput from \"./FlexInput\";\nimport SubmitButton from \"./SubmitButton\";\nimport CustomAlert from \"./CustomAlert\";\nimport userApi from \"../api/userApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginForm = function LoginForm(_ref) {\n  var setLoggedIn = _ref.setLoggedIn,\n    setUser = _ref.setUser;\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    response = _useState6[0],\n    setResponse = _useState6[1];\n  useEffect(function () {\n    var checkSession = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var previousSession = yield AsyncStorage.getItem('@userId');\n        if (previousSession) {\n          var user = yield userApi.getUserInfo(previousSession);\n          console.log(user);\n          setLoggedIn(true);\n          setUser(user);\n          navigation.navigate('Profile', {\n            user: user\n          });\n        }\n      });\n      return function checkSession() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    checkSession();\n  }, []);\n  var handleLogin = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var sendLogin = yield userApi.login(username, password);\n      var data = yield sendLogin;\n      setResponse(data);\n      if (data && data.success) {\n        setLoggedIn(true);\n        setUser(data.user);\n        yield AsyncStorage.setItem('@userId', data.user._id);\n        navigation.navigate('Profile', {\n          user: data.user\n        });\n      }\n    });\n    return function handleLogin() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlexInput, {\n      type: \"text\",\n      placeholder: \"Username or Email\",\n      value: username,\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      }\n    }), _jsx(FlexInput, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(SubmitButton, {\n      title: \"Login\",\n      onPress: handleLogin\n    }), response && _jsx(CustomAlert, {\n      message: response.message,\n      success: response.success\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    minWidth: '100%'\n  }\n});\nexport default LoginForm;","map":{"version":3,"names":["React","useEffect","useState","View","StyleSheet","useNavigation","AsyncStorage","FlexInput","SubmitButton","CustomAlert","userApi","jsx","_jsx","jsxs","_jsxs","LoginForm","_ref","setLoggedIn","setUser","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","response","setResponse","checkSession","_ref2","_asyncToGenerator","previousSession","getItem","user","getUserInfo","console","log","navigate","apply","arguments","handleLogin","_ref3","sendLogin","login","data","success","setItem","_id","style","styles","container","children","type","placeholder","value","onChangeText","text","title","onPress","message","create","padding","minWidth"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/LoginForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\n\r\nimport FlexInput from './FlexInput';\r\nimport SubmitButton from './SubmitButton';\r\nimport CustomAlert from './CustomAlert';\r\n\r\nimport userApi from '../api/userApi';\r\n\r\nconst LoginForm = ({ setLoggedIn, setUser }) => {\r\n    const navigation = useNavigation(); // Hook for navigation\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [response, setResponse] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const checkSession = async () => {\r\n            // Check for previous session\r\n            const previousSession = await AsyncStorage.getItem('@userId');\r\n            if(previousSession) {\r\n                const user = await userApi.getUserInfo(previousSession);\r\n                console.log(user)\r\n                setLoggedIn(true)\r\n                setUser(user)\r\n                navigation.navigate('Profile', { user });\r\n            }\r\n        }\r\n        checkSession()\r\n    }, [])\r\n\r\n    const handleLogin = async () => {\r\n\r\n        const sendLogin = await userApi.login(username, password);\r\n        const data = await sendLogin;\r\n\r\n        // Always set the response to trigger CustomAlert\r\n        setResponse(data);\r\n\r\n        if (data && data.success) {\r\n            // Navigate to the next screen (replace 'Home' with your screen name)\r\n            setLoggedIn(true)\r\n            setUser(data.user)\r\n            await AsyncStorage.setItem('@userId', data.user._id);\r\n            navigation.navigate('Profile', { user: data.user });\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <FlexInput\r\n                type=\"text\"\r\n                placeholder=\"Username or Email\"\r\n                value={username}\r\n                onChangeText={(text) => setUsername(text)}\r\n            />\r\n            <FlexInput\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChangeText={(text) => setPassword(text)}\r\n            />\r\n            <SubmitButton title=\"Login\" onPress={handleLogin}\r\n            />\r\n            {response && <CustomAlert message={response.message} success={response.success} />}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 20,\r\n        minWidth: '100%'\r\n    },\r\n});\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}